// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Drugs {
  id         String     @id @db.VarChar(100)
  DrugName   String     @db.VarChar(255)
  DrugStatus Boolean    @default(false)
  DrugImage  String?    @db.VarChar(255)
  Order      Orders[]
  Inventory  Inventory?
  CreatedAt  DateTime   @default(now())
  UpdatedAt  DateTime   @default(now()) @updatedAt
}

model Orders {
  id             String       @id @db.VarChar(200)
  PrescriptionId String       @db.VarChar(200)
  OrderItemId    String       @db.VarChar(200)
  OrderItemName  String       @db.VarChar(200)
  OrderQty       Int          @db.Integer
  OrderUnitcode  String       @db.VarChar(20)
  Machine        String       @db.VarChar(200)
  Command        String       @db.VarChar(200)
  OrderStatus    String       @default("0") @db.Char(1)
  Slot           String?      @db.VarChar(2)
  Prescription   Prescription @relation(fields: [PrescriptionId], references: [id])
  DrugInfo       Drugs        @relation(fields: [OrderItemId], references: [id])
  CreatedAt      DateTime     @default(now())
  UpdatedAt      DateTime     @default(now()) @updatedAt
}

model Prescription {
  id               String   @id @db.VarChar(200)
  PrescriptionDate String   @db.VarChar(200)
  Hn               String   @db.VarChar(20)
  An               String   @db.VarChar(20)
  PatientName      String   @db.VarChar(200)
  WardCode         String   @db.VarChar(20)
  WardDesc         String   @db.VarChar(200)
  PriorityCode     String   @db.VarChar(20)
  PriorityDesc     String   @db.VarChar(200)
  PresStatus       String   @default("0") @db.Char(1)
  Order            Orders[]
  UsedByUserId     String
  UsedBy           Users    @relation(fields: [UsedByUserId], references: [id])
  CreatedAt        DateTime @default(now())
  UpdatedAt        DateTime @default(now()) @updatedAt
}

model Machines {
  id            String      @id @db.VarChar(100)
  MachineName   String      @db.VarChar(200)
  MachineStatus String      @db.Char(1)
  MachineSlot1  Boolean     @default(false)
  MachineSlot2  Boolean     @default(false)
  Inventory     Inventory[]
  CreatedAt     DateTime    @default(now())
  UpdatedAt     DateTime    @default(now()) @updatedAt
}

model Inventory {
  id                String   @id @db.VarChar(100)
  InventoryPosition String   @db.VarChar(255)
  InventoryQty      Int      @default(0) @db.Integer
  InventoryStatus   Boolean  @default(false)
  DrugId            String   @unique @db.VarChar(100)
  MachineId         String   @db.VarChar(100)
  Drug              Drugs    @relation(fields: [DrugId], references: [id])
  Machines          Machines @relation(fields: [MachineId], references: [id])
  CreatedAt         DateTime @default(now())
  UpdatedAt         DateTime @default(now()) @updatedAt
}

model Users {
  id               String         @id @db.VarChar(100)
  UserName         String         @unique @db.VarChar(155)
  UserPassword     String         @db.VarChar(155)
  UserPincode      String         @db.VarChar(155)
  DisplayName      String         @db.VarChar(150)
  UserImage        String?        @db.VarChar(255)
  UserStatus       Boolean        @default(true)
  UserRole         Role           @default(USER)
  CreateBy         String         @db.VarChar(100)
  PrescriptionUsed Prescription[]
  CreatedAt        DateTime       @default(now())
  UpdatedAt        DateTime       @default(now()) @updatedAt
}

enum Role {
  ADMIN
  USER
}
